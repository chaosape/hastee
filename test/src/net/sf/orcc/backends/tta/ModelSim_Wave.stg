
printNetwork(network, options) ::= <<

onerror {resume}
quietly WaveActivateNextPane {} 0
add wave -noupdate -divider \<NULL\>
add wave -noupdate -divider Top
add wave -noupdate -divider \<NULL\>
add wave -noupdate -format Logic /tb_top/clk
add wave -noupdate -format Logic /tb_top/rst_n
<network.inputs: addNetworkInputPort(); separator="\n">
<network.outputs: addNetworkOutputPort(); separator="\n">

<network.instances: { instance | <addInstanceSignals(instance, true)> }; separator="\n\n">
<network.connections: addConnectionSignals(); separator="\n\n">

<printOptions()>
>>

printInstance(instance, options) ::= <<
onerror {resume}
quietly WaveActivateNextPane {} 0

<addInstanceSignals(instance, false)>

<printOptions()>
>>

addNetworkInputPort(port) ::= <<
<if(port.native)
><addNetworkNativePort(port)><
else
>add wave -noupdate -format Literal -radix decimal /tb_top/s_<port.name>_q
add wave -noupdate -format Literal -radix decimal /tb_top/s_<port.name>_status
add wave -noupdate -format Logic /tb_top/s_<port.name>_rdreq<
endif>
>>

addNetworkOutputPort(port) ::= <<
<if(port.native)
><addNetworkNativePort(port)><
else
>add wave -noupdate -format Literal -radix decimal /tb_top/s_<port.name>_data
add wave -noupdate -format Literal -radix decimal /tb_top/s_<port.name>_status
add wave -noupdate -format Logic /tb_top/s_<port.name>_wrreq<
endif>
>>

addNetworkNativePort(port) ::= <<
add wave -noupdate -format Literal /tb_top/<port.name>_native
>>

addInstanceSignals(instance, choosePrefix) ::= <<
<if(!instance.actor.native)
>add wave -noupdate -divider \<NULL\>
add wave -noupdate -divider <instance.id>
add wave -noupdate -divider \<NULL\>

add wave -noupdate -format Logic /<if(choosePrefix)>tb_top/top_orcc<else>/tb_<instance.id><endif>/<instance.id>_inst/clk
add wave -noupdate -format Logic /<if(choosePrefix)>tb_top/top_orcc<else>/tb_<instance.id><endif>/<instance.id>_inst/rst_n

<instance.actor.inputs: { input | <addInstanceInput(input, i0, choosePrefix)> }; separator="\n">
<instance.actor.outputs: { output | <addInstanceOutput(output, i0, choosePrefix)> }; separator="\n"><
endif>
>>

addInstanceInput(input, index, choosePrefix) ::= <<
<if(!input.native)
>add wave -noupdate -format Literal -radix decimal /<if(choosePrefix)>tb_top/top_orcc<else>/tb_<instance.id><endif>/<instance.id>_inst/data_<index>_in
add wave -noupdate -format Literal -radix decimal /<if(choosePrefix)>tb_top/top_orcc<else>/tb_<instance.id><endif>//<instance.id>_inst/status_<index>_in
add wave -noupdate -format Logic /<if(choosePrefix)>tb_top/top_orcc<else>/tb_<instance.id><endif>/<instance.id>_inst/ack_<index>_in<
else
>add wave -noupdate -format Literal /<if(choosePrefix)>tb_top/top_orcc<else>/tb_<instance.id><endif>/<instance.id>_inst/s_<input.name><
endif>
>>

addInstanceOutput(output, index, choosePrefix) ::= <<
<if(!output.native)
>add wave -noupdate -format Literal -radix decimal /<if(choosePrefix)>tb_top/top_orcc<else>/tb_<instance.id><endif>/<instance.id>_inst/data_<index>_out
add wave -noupdate -format Literal -radix decimal /<if(choosePrefix)>tb_top/top_orcc<else>/tb_<instance.id><endif>/<instance.id>_inst/status_<index>_out
add wave -noupdate -format Logic /<if(choosePrefix)>tb_top/top_orcc<else>/tb_<instance.id><endif>/<instance.id>_inst/dv_<index>_out<
else
>add wave -noupdate -format Literal /<if(choosePrefix)>tb_top/top_orcc<else>/tb_<instance.id><endif>/<instance.id>_inst/s_<output.name><
endif>
>>

addConnectionSignals(connection) ::= <<
<if(!connection.sourcePort.native && !connection.targetPort.native && !connection.source.port && !connection.target.port)
>add wave -noupdate -divider \<NULL\>
add wave -noupdate -divider fifo_<connection.id>:_<connection.source.id>_\>\>_<connection.target.id>
add wave -noupdate -divider \<NULL\>
add wave -noupdate -format Logic /tb_top/top_orcc/fifo_<connection.id>/clk
add wave -noupdate -format Logic /tb_top/top_orcc/fifo_<connection.id>/rst_n
add wave -noupdate -format Logic /tb_top/top_orcc/fifo_<connection.id>/wrreq
add wave -noupdate -format Logic /tb_top/top_orcc/fifo_<connection.id>/rdreq
add wave -noupdate -format Literal -radix decimal /tb_top/top_orcc/fifo_<connection.id>/data
add wave -noupdate -format Literal -radix decimal /tb_top/top_orcc/fifo_<connection.id>/q
add wave -noupdate -format Literal -radix decimal /tb_top/top_orcc/fifo_<connection.id>/nb_freerooms
add wave -noupdate -format Literal -radix decimal /tb_top/top_orcc/fifo_<connection.id>/nb_tokens
add wave -noupdate -format Literal -radix decimal /tb_top/top_orcc/fifo_<connection.id>/nb_tokens_i<
endif>
>>

printOptions() ::= <<
TreeUpdate [SetDefaultTree]
WaveRestoreCursors {{Cursor 1} {112 ps} 0}
configure wave -namecolwidth 222
configure wave -valuecolwidth 100
configure wave -justifyvalue left
configure wave -signalnamewidth 1
configure wave -snapdistance 10
configure wave -datasetprefix 0
configure wave -rowmargin 4
configure wave -childrowmargin 2
configure wave -gridoffset 0
configure wave -gridperiod 1
configure wave -griddelta 40
configure wave -timeline 0
configure wave -timelineunits ns
update
WaveRestoreZoom {0 ps} {2911 ps}
>>