addActor(actor) ::= <<
<if (!actor.system)>
<actor.packageAsList; separator="/">/<actor.simpleName>.cpp
<endif>
>>


///////////////////////////////////////////////////////////////////////////////
// Cpp_CMakeLists

Cpp_CMakeLists(network, needSerDes) ::= <<
# Generated from $network.name$

cmake_minimum_required (VERSION 2.8)
project (<network.name>)

if(MSVC)
set(CMAKE_CXX_FLAGS_DEBUG "/D_DEBUG /MTd /ZI /Ob0 /Od /RTC1")
set(CMAKE_CXX_FLAGS_RELEASE "/MT /O2 /Ob2 /D NDEBUG")
endif(MSVC)

if(CMAKE_COMPILER_IS_GNUCXX)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -ansi -pedantic -pthread -fsigned-char -fPIC")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -O0 -g")
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O2")
endif()

# Common packages required
find_library(CALaka_LIBRARY CALaka HINTS $ENV{CALDIR} PATH_SUFFIXES lib)
find_library(SystemActor_LIBRARY SystemActor HINTS $ENV{CALDIR} PATH_SUFFIXES lib)
find_library(Thread_LIBRARY Thread HINTS $ENV{CALDIR} PATH_SUFFIXES lib)

find_path(CAL_INCLUDE_DIR actoraka.h HINTS $ENV{CALDIR} PATH_SUFFIXES include include/CAL)

find_package(SDL REQUIRED)

<if(needSerDes)>
find_path(CAL_SOURCE_DIR wrapperaka.cpp HINTS $ENV{CALDIR} PATH_SUFFIXES src src/CAL)
find_library(AdaptorFactory_LIBRARY AdaptorFactory HINTS $ENV{CALDIR} PATH_SUFFIXES lib)
add_library(Wrapper STATIC "${CAL_SOURCE_DIR}/wrapperaka.cpp")
<endif>

include_directories(
	${CMAKE_SOURCE_DIR}
	${CAL_INCLUDE_DIR}
	${SDL_INCLUDE_DIR}
)


add_executable (<network.name>
<network.name>.cpp
<network.actors : addActor()>
)

<if(needSerDes)>
add_dependencies(<network.name> Wrapper)
<endif>

target_link_libraries(<network.name>
<if(needSerDes)>
Wrapper
${AdaptorFactory_LIBRARY}
<endif>
${CALaka_LIBRARY}
${SystemActor_LIBRARY}
${Thread_LIBRARY}
${SDL_LIBRARY}
)

>>
